name: release

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/release.yml"
      - "rust-toolchain.toml"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - "**.rs"

  workflow_call:
    inputs:
      release_tag:
        description: "version of the release"
        required: true
        type: string

  workflow_dispatch:
    inputs:
      release_tag:
        description: "version of the release"
        required: true
        type: string

jobs:
  execute-build:
    uses: ./.github/workflows/build.yml

  persist-metrics:
    name: persist metrics with git-metrics
    runs-on: ubuntu-latest
    needs:
      - execute-build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: download binaries
        uses: ./.github/actions/download-binaries
      - name: persist metrics
        uses: ./.github/actions/persist-metrics
        with:
          push: "true"

  publish:
    name: publish
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call' }}
    needs:
      - execute-build
    steps:
      - name: download binaries
        uses: ./.github/actions/download-binaries

      - name: get release id from tag
        id: release_id
        run: |
          release_id=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/tags/${{ inputs.release_tag }} | jq .id)
          echo "release_id=$release_id" >> $GITHUB_OUTPUT
      - name: upload the artifacts
        uses: skx/github-action-publish-binaries@release-2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ steps.release_id.outputs.release_id }}
          args: "git-metrics_*"
