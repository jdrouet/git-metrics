name: release

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/release.yml"
      - "rust-toolchain.toml"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - "**.rs"

  workflow_call:
    inputs:
      release_tag:
        description: "version of the release"
        required: true
        type: string

  workflow_dispatch:
    inputs:
      release_tag:
        description: "version of the release"
        required: true
        type: string

jobs:
  execute-build:
    uses: ./.github/workflows/build.yml

  persist-metrics:
    name: persist metrics with git-metrics
    runs-on: ubuntu-latest
    needs:
      - execute-build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: binary-windows
      - uses: actions/download-artifact@v4
        with:
          name: binary-darwin
      - uses: actions/download-artifact@v4
        with:
          name: binary-linux

      - name: set git user
        uses: ./.github/actions/git-user
      - name: make git-metrics executable
        run: chmod +x ./git-metrics_linux-x86_64

      - name: publish metrics
        run: |
          ./git-metrics_linux-x86_64 --backend command pull
          ./git-metrics_linux-x86_64 add binary-size --tag "build.target: x86_64-pc-windows-msvc" --tag "platform.os: windows" --tag "platform.arch: x86_64" --tag "unit: byte" $(stat --printf="%s" ./git-metrics_win-x86_64.exe)
          ./git-metrics_linux-x86_64 add binary-size --tag "build.target: aarch64-pc-windows-msvc" --tag "platform.os: windows" --tag "platform.arch: aarch64" --tag "unit: byte" $(stat --printf="%s" ./git-metrics_win-aarch64.exe)
          ./git-metrics_linux-x86_64 add binary-size --tag "build.target: x86_64-apple-darwin" --tag "platform.os: macos" --tag "platform.arch: x86_64" --tag "unit: byte" $(stat --printf="%s" ./git-metrics_darwin-x86_64)
          ./git-metrics_linux-x86_64 add binary-size --tag "build.target: aarch64-apple-darwin" --tag "platform.os: macos" --tag "platform.arch: aarch64" --tag "unit: byte" $(stat --printf="%s" ./git-metrics_darwin-aarch64)
          ./git-metrics_linux-x86_64 add binary-size --tag "build.target: x86_64-unknown-linux-gnu" --tag "platform.os: linux" --tag "platform.arch: x86_64" --tag "unit: byte" $(stat --printf="%s" ./git-metrics_linux-x86_64)
          ./git-metrics_linux-x86_64 add binary-size --tag "build.target: aarch64-unknown-linux-gnu" --tag "platform.os: linux" --tag "platform.arch: aarch64" --tag "unit: byte" $(stat --printf="%s" ./git-metrics_linux-aarch64)
          ./git-metrics_linux-x86_64 --backend command push

  publish:
    name: publish
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call' }}
    needs:
      - execute-build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binary-windows
      - uses: actions/download-artifact@v4
        with:
          name: binary-darwin
      - uses: actions/download-artifact@v4
        with:
          name: binary-linux
      - name: get release id from tag
        id: release_id
        run: |
          release_id=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/tags/${{ inputs.release_tag }} | jq .id)
          echo "release_id=$release_id" >> $GITHUB_OUTPUT
      - name: upload the artifacts
        uses: skx/github-action-publish-binaries@release-2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ steps.release_id.outputs.release_id }}
          args: "git-metrics_*"
